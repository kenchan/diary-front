---
import Layout from "../../layouts/Layout.astro";
import ArticleCard from "../../components/ArticleCard.astro";

export const prerender = true;

export function chunk<T extends any[]>(arr: T, size: number) {
  return arr.reduce((preArr: T[][], current, index) => {
    if (index % size) {
      return preArr;
    } else {
      return [...preArr, ...[arr.slice(index, index + size)]];
    }
  }, [] as T[][]);
}

export async function getStaticPaths() {
  const allArticles = await Astro.glob("../*.md");
  const chunkedArticles = await chunk(allArticles, 10);
  return chunkedArticles.map((as, index) => {
    return {
      params: {
        page: (index + 1).toString(),
      },
      props: {
        articles: as,
      },
    };
  });
}

const page = Number.parseInt(Astro.params.page, 10);
const { articles } = Astro.props;
---

<Layout title="けんちゃんくんさんのWeb日記" slug="" imageUrl="">
  {articles.map((article) => (
    <ArticleCard
      title={article.frontmatter.title}
      body={article.compiledContent()}
      publishedOn={article.frontmatter.publishedOn}
      createdAt={article.frontmatter.createdAt}
      updatedAt={article.frontmatter.updatedAt}
    />
  ))}
  <div class="pager m-5 p-5">
    {page > 1 && <a href={"/page/" + (page - 1).toString()}>新しい記事へ</a>}
    {
      page < 10 && (
        <a class="float-right" href={"/page/" + (page + 1).toString()}>
          古い記事へ
        </a>
      )
    }
  </div>
</Layout>

<style is:global>
  article {
    @apply text-gray-600;
  }

  article h2 {
    @apply text-2xl border-b-2 text-gray-700 mt-5;
  }

  article h3 {
    @apply text-xl text-gray-700;
  }

  article p {
    @apply mb-4 leading-8;
  }

  article a {
    @apply underline;
    @apply text-blue-800;
    @apply break-words break-all;
  }

  article ul {
    @apply list-disc list-inside ml-4;
  }

  article ol {
    @apply list-decimal list-inside ml-4;
  }

  article pre > code {
    @apply block bg-gray-100 p-4 rounded-xl overflow-x-auto;
  }

  article p img {
    @apply mt-10 mb-10 rounded shadow-md;
  }
</style>

<style>
  .pager a {
    @apply underline;
    @apply text-blue-800;
  }
</style>
