---
import { marked } from 'marked';
import Layout from '../layouts/Layout.astro';
import { ArticleFetcher } from '../libs/article_fetcher';

const before = Astro.url.searchParams.get('before');
const after = Astro.url.searchParams.get('after');

const fetcher = new ArticleFetcher();

const articlesPage = await fetcher.fetchMultiple(before! || '', after! || '');
const articles = articlesPage.nodes;
const pageInfo = articlesPage.pageInfo;

---

<Layout title="けんちゃんくんさんのWeb日記" slug="" imageUrl="">
  {articles.map((article) =>(
    <>
      <article class="m-5 p-5 h-96 border rounded border-gray-200 shadow overflow-hidden bg-gray-100">
        <div class="text-sm text-gray-700">
          {new Date(article.publishedOn).toLocaleDateString('ja-JP')}
        </div>
        <h1 class="text-2xl mb-4 font-bold">
          <a href={"/" + encodeURI(article.title)}>
            {article.title}
          </a>
        </h1>
        <div set:html={marked.parse(article.body)}></div>
        <div class="hatenaStar"></div>
      </article>
    </>
  ))}

  <div class="pager m-5 p-5">
    {pageInfo.hasPreviousPage && <a href={"/?before=" + pageInfo.startCursor}>新しい記事へ</a>}
    {pageInfo.hasNextPage && <a class="float-right" href={"/?after=" + pageInfo.endCursor}>古い記事へ</a>}
  </div>
</Layout>

<style is:global>
  article {
    @apply text-gray-600;
  }

  article h2 {
    @apply text-2xl border-b-2 text-gray-700 mt-5;
  }

  article h3 {
    @apply text-xl text-gray-700
  }

  article p {
    @apply mb-4 leading-8;
  }

  article a {
    @apply underline;
    @apply text-blue-800;
    @apply break-words break-all;
  }

  article ul {
    @apply list-disc list-inside ml-4;
  }

  article ol {
    @apply list-decimal list-inside ml-4;
  }

  article pre > code {
    @apply block bg-gray-100 p-4 rounded-xl overflow-x-auto;
  }

  article p img {
    @apply mt-10 mb-10 rounded shadow-md;
  }
</style>

<style>
  .pager a {
    @apply underline;
    @apply text-blue-800;
  }
</style>

